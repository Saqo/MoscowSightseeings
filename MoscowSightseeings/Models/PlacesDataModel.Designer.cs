//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PlacesListDBModel", "FK_Places_Sightseeings", "Sightseeings", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MoscowSightseeings.Models.Sightseeings), "Places", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoscowSightseeings.Models.Places), true)]

#endregion

namespace MoscowSightseeings.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PlacesListDBEntities5 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PlacesListDBEntities5 object using the connection string found in the 'PlacesListDBEntities5' section of the application configuration file.
        /// </summary>
        public PlacesListDBEntities5() : base("name=PlacesListDBEntities5", "PlacesListDBEntities5")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PlacesListDBEntities5 object.
        /// </summary>
        public PlacesListDBEntities5(string connectionString) : base(connectionString, "PlacesListDBEntities5")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PlacesListDBEntities5 object.
        /// </summary>
        public PlacesListDBEntities5(EntityConnection connection) : base(connection, "PlacesListDBEntities5")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Places> Places
        {
            get
            {
                if ((_Places == null))
                {
                    _Places = base.CreateObjectSet<Places>("Places");
                }
                return _Places;
            }
        }
        private ObjectSet<Places> _Places;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sightseeings> Sightseeings
        {
            get
            {
                if ((_Sightseeings == null))
                {
                    _Sightseeings = base.CreateObjectSet<Sightseeings>("Sightseeings");
                }
                return _Sightseeings;
            }
        }
        private ObjectSet<Sightseeings> _Sightseeings;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Places EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlaces(Places places)
        {
            base.AddObject("Places", places);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sightseeings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSightseeings(Sightseeings sightseeings)
        {
            base.AddObject("Sightseeings", sightseeings);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PlacesListDBModel", Name="Places")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Places : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Places object.
        /// </summary>
        /// <param name="placeId">Initial value of the PlaceId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="cordX">Initial value of the CordX property.</param>
        /// <param name="cordY">Initial value of the CordY property.</param>
        /// <param name="titleIMG">Initial value of the TitleIMG property.</param>
        /// <param name="placeIMG">Initial value of the PlaceIMG property.</param>
        /// <param name="pageContent">Initial value of the PageContent property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        public static Places CreatePlaces(global::System.Guid placeId, global::System.String title, global::System.String cordX, global::System.String cordY, global::System.String titleIMG, global::System.String placeIMG, global::System.String pageContent, global::System.Guid typeID)
        {
            Places places = new Places();
            places.PlaceId = placeId;
            places.Title = title;
            places.CordX = cordX;
            places.CordY = cordY;
            places.TitleIMG = titleIMG;
            places.PlaceIMG = placeIMG;
            places.PageContent = pageContent;
            places.TypeID = typeID;
            return places;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PlaceId
        {
            get
            {
                return _PlaceId;
            }
            set
            {
                if (_PlaceId != value)
                {
                    OnPlaceIdChanging(value);
                    ReportPropertyChanging("PlaceId");
                    _PlaceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlaceId");
                    OnPlaceIdChanged();
                }
            }
        }
        private global::System.Guid _PlaceId;
        partial void OnPlaceIdChanging(global::System.Guid value);
        partial void OnPlaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CordX
        {
            get
            {
                return _CordX;
            }
            set
            {
                OnCordXChanging(value);
                ReportPropertyChanging("CordX");
                _CordX = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CordX");
                OnCordXChanged();
            }
        }
        private global::System.String _CordX;
        partial void OnCordXChanging(global::System.String value);
        partial void OnCordXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CordY
        {
            get
            {
                return _CordY;
            }
            set
            {
                OnCordYChanging(value);
                ReportPropertyChanging("CordY");
                _CordY = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CordY");
                OnCordYChanged();
            }
        }
        private global::System.String _CordY;
        partial void OnCordYChanging(global::System.String value);
        partial void OnCordYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TitleIMG
        {
            get
            {
                return _TitleIMG;
            }
            set
            {
                OnTitleIMGChanging(value);
                ReportPropertyChanging("TitleIMG");
                _TitleIMG = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TitleIMG");
                OnTitleIMGChanged();
            }
        }
        private global::System.String _TitleIMG;
        partial void OnTitleIMGChanging(global::System.String value);
        partial void OnTitleIMGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlaceIMG
        {
            get
            {
                return _PlaceIMG;
            }
            set
            {
                OnPlaceIMGChanging(value);
                ReportPropertyChanging("PlaceIMG");
                _PlaceIMG = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PlaceIMG");
                OnPlaceIMGChanged();
            }
        }
        private global::System.String _PlaceIMG;
        partial void OnPlaceIMGChanging(global::System.String value);
        partial void OnPlaceIMGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PageContent
        {
            get
            {
                return _PageContent;
            }
            set
            {
                OnPageContentChanging(value);
                ReportPropertyChanging("PageContent");
                _PageContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PageContent");
                OnPageContentChanged();
            }
        }
        private global::System.String _PageContent;
        partial void OnPageContentChanging(global::System.String value);
        partial void OnPageContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Guid _TypeID;
        partial void OnTypeIDChanging(global::System.Guid value);
        partial void OnTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PlacesListDBModel", "FK_Places_Sightseeings", "Sightseeings")]
        public Sightseeings Sightseeings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sightseeings>("PlacesListDBModel.FK_Places_Sightseeings", "Sightseeings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sightseeings>("PlacesListDBModel.FK_Places_Sightseeings", "Sightseeings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sightseeings> SightseeingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sightseeings>("PlacesListDBModel.FK_Places_Sightseeings", "Sightseeings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sightseeings>("PlacesListDBModel.FK_Places_Sightseeings", "Sightseeings", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PlacesListDBModel", Name="Sightseeings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sightseeings : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sightseeings object.
        /// </summary>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="tItle">Initial value of the TItle property.</param>
        public static Sightseeings CreateSightseeings(global::System.Guid typeID, global::System.String tItle)
        {
            Sightseeings sightseeings = new Sightseeings();
            sightseeings.TypeID = typeID;
            sightseeings.TItle = tItle;
            return sightseeings;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                if (_TypeID != value)
                {
                    OnTypeIDChanging(value);
                    ReportPropertyChanging("TypeID");
                    _TypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TypeID");
                    OnTypeIDChanged();
                }
            }
        }
        private global::System.Guid _TypeID;
        partial void OnTypeIDChanging(global::System.Guid value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TItle
        {
            get
            {
                return _TItle;
            }
            set
            {
                OnTItleChanging(value);
                ReportPropertyChanging("TItle");
                _TItle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TItle");
                OnTItleChanged();
            }
        }
        private global::System.String _TItle;
        partial void OnTItleChanging(global::System.String value);
        partial void OnTItleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PlacesListDBModel", "FK_Places_Sightseeings", "Places")]
        public EntityCollection<Places> Places
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Places>("PlacesListDBModel.FK_Places_Sightseeings", "Places");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Places>("PlacesListDBModel.FK_Places_Sightseeings", "Places", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
